// Code generated by go-swagger; DO NOT EDIT.

// SPDX-License-Identifier: Apache-2.0
//

package ipam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/takumin/go-netbox/models"
)

// NewIPAMIPAddressesCreateParams creates a new IPAMIPAddressesCreateParams object
// with the default values initialized.
func NewIPAMIPAddressesCreateParams() *IPAMIPAddressesCreateParams {
	var ()
	return &IPAMIPAddressesCreateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewIPAMIPAddressesCreateParamsWithTimeout creates a new IPAMIPAddressesCreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewIPAMIPAddressesCreateParamsWithTimeout(timeout time.Duration) *IPAMIPAddressesCreateParams {
	var ()
	return &IPAMIPAddressesCreateParams{

		timeout: timeout,
	}
}

// NewIPAMIPAddressesCreateParamsWithContext creates a new IPAMIPAddressesCreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewIPAMIPAddressesCreateParamsWithContext(ctx context.Context) *IPAMIPAddressesCreateParams {
	var ()
	return &IPAMIPAddressesCreateParams{

		Context: ctx,
	}
}

// NewIPAMIPAddressesCreateParamsWithHTTPClient creates a new IPAMIPAddressesCreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewIPAMIPAddressesCreateParamsWithHTTPClient(client *http.Client) *IPAMIPAddressesCreateParams {
	var ()
	return &IPAMIPAddressesCreateParams{
		HTTPClient: client,
	}
}

/*IPAMIPAddressesCreateParams contains all the parameters to send to the API endpoint
for the ipam ip addresses create operation typically these are written to a http.Request
*/
type IPAMIPAddressesCreateParams struct {

	/*Data*/
	Data *models.WritableIPAddress

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the ipam ip addresses create params
func (o *IPAMIPAddressesCreateParams) WithTimeout(timeout time.Duration) *IPAMIPAddressesCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the ipam ip addresses create params
func (o *IPAMIPAddressesCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the ipam ip addresses create params
func (o *IPAMIPAddressesCreateParams) WithContext(ctx context.Context) *IPAMIPAddressesCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the ipam ip addresses create params
func (o *IPAMIPAddressesCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the ipam ip addresses create params
func (o *IPAMIPAddressesCreateParams) WithHTTPClient(client *http.Client) *IPAMIPAddressesCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the ipam ip addresses create params
func (o *IPAMIPAddressesCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the ipam ip addresses create params
func (o *IPAMIPAddressesCreateParams) WithData(data *models.WritableIPAddress) *IPAMIPAddressesCreateParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the ipam ip addresses create params
func (o *IPAMIPAddressesCreateParams) SetData(data *models.WritableIPAddress) {
	o.Data = data
}

// WriteToRequest writes these params to a swagger request
func (o *IPAMIPAddressesCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Data != nil {
		if err := r.SetBodyParam(o.Data); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
